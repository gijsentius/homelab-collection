- name: Try to install NVIDIA packages
  become: true
  block:
    - name: Add nvidia APT repository
      ansible.builtin.deb822_repository:
        name: nvidia-container-list
        types: [deb]
        uris: "https://nvidia.github.io/libnvidia-container/stable/deb/"
        signed_by: "https://nvidia.github.io/libnvidia-container/gpgkey"
        suites: [/]
        state: present
        enabled: yes

    - name: Install necessary packages on host
      ansible.builtin.apt:
        state: present
        name: 
          - nvidia-container-toolkit
          - nvidia-driver-570

    - name: Setup docker to use nvidia toolkit 
      ansible.builtin.command: >
        nvidia-ctk runtime configure --runtime=docker

    - name: Restart Docker
      ansible.builtin.systemd:
        name: docker
        state: restarted

- name: Create necessary media directory tv
  ansible.builtin.file:
    path: "/home/{{ host_user }}/plex/data/media/tv"
    mode: '0777'
    state: directory

- name: Create necessary media directory movies
  ansible.builtin.file:
    path: "/home/{{ host_user }}/plex/data/media/movies"
    mode: '0777'
    state: directory

- name: Start watchtower docker container
  community.docker.docker_container:
    name: watchtower
    image: containrrr/watchtower:latest
    env:
      TZ: Europe/Amsterdam
      PUID: '1000'
      PGID: '1000'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart_policy: "always"
    state: started

- name: Start Plex Docker container
  community.docker.docker_container:
    name: plex 
    image: ghcr.io/hotio/plex:latest
    env:
      TZ: Europe/Amsterdam
      PUID: '1000'
      PGID: '1000'
      umask: '002'
    volumes:
      - "/home/{{ host_user }}/config/plex:/config"
      - "/home/{{ host_user }}/plex/data/media/tv:/tv"
      - "/home/{{ host_user }}/plex/data/media/movies:/movies" 
    device_requests:
      - driver: nvidia
        count: -1 # this means we want all
        capabilities:
          - gpu
          - video
    restart_policy: "unless-stopped"
    state: started
    ports:
      - 32400:32400

- name: Start sonarr docker container
  community.docker.docker_container:
    name: sonarr 
    image: lscr.io/linuxserver/sonarr:latest
    env:
      TZ: Europe/Amsterdam
      PUID: '1000'
      PGID: '1000'
      UMASK: '002'
    network_mode: host
    volumes:
      - ~/config/sonarr:/config
      - ~/plex/data:/data
    ports:
      - 8989:8989
    restart_policy: "always"
    state: started

- name: Start radarr docker container
  community.docker.docker_container:
    name: radarr 
    image: lscr.io/linuxserver/radarr:latest
    env:
      TZ: Europe/Amsterdam
      PUID: '1000'
      PGID: '1000'
    network_mode: host
    volumes:
      - ~/config/radarr:/config
      - ~/plex/data:/data
    ports:
      - 7878:7878
    restart_policy: "always"
    state: started

- name: start overseerr docker container
  community.docker.docker_container:
    name: overseerr 
    image: sctx/overseerr:latest
    env:
      TZ: Europe/Amstedam
    volumes:
      - ~/config/overseerr:/app/config
    ports:
      - 5055:5055
    restart_policy: "always"
    state: started

- name: Start flaresolverr docker container
  community.docker.docker_container:
    name: flaresolverr
    image: ghcr.io/flaresolverr/flaresolverr:latest
    env:
      LOG_LEVEL: 'info'
    network_mode: host 
    ports:
      - 8191:8191 
    restart_policy: "unless-stopped"
    state: started

- name: Start prowlarr docker container
  community.docker.docker_container:
    name: prowlarr 
    image: lscr.io/linuxserver/prowlarr:latest
    env:
      TZ: Europe/Amsterdam
      PUID: '1000'
      PGID: '1000'
    volumes:
      - ~/config/prowlarr:/config
    network_mode: host
    # ports:
    #   - 9696:9696 
    restart_policy: "unless-stopped"
    state: started
